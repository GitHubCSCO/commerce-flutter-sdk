import 'package:optimizely_commerce_api/optimizely_commerce_api.dart';
import 'package:test/test.dart';

void main() {
  group('WishListCollectionModel', () {
    test(
        'fromJson should correctly deserialize JSON to WishListCollectionModel object',
        () {
      // Arrange
      final json = {
        "wishListCollection": [
          {
            "id": "wishlist1",
            "name": "My Wishlist",
            "description": "A sample wishlist",
            "canAddAllToCart": true,
            "updatedOn": "2024-11-14T12:00:00.000Z",
            "updatedByDisplayName": "User A",
            "wishListLinesCount": 5,
            "wishListSharesCount": 2,
            "isSharedList": true,
            "sharedByDisplayName": "Shared User",
            "allowEdit": true,
            "shareOption": "Public",
            "isAutogenerated": false,
            "pagination": {
              "page": 1,
              "pageSize": 10,
              "totalPages": 1,
              "totalResults": 5
            },
            "wishListLineCollection": [
              {
                "id": "line1",
                "productName": "Product A",
                "qtyOnHand": 10,
                "canAddToCart": true,
                "unitOfMeasure": "PCS",
                "createdOn": "2024-11-14T12:00:00.000Z"
              }
            ]
          },
          {
            "id": "wishlist2",
            "name": "Another Wishlist",
            "description": "Another sample wishlist",
            "canAddAllToCart": false,
            "updatedOn": "2024-11-15T12:00:00.000Z",
            "updatedByDisplayName": "User B",
            "wishListLinesCount": 3,
            "wishListSharesCount": 1,
            "isSharedList": false,
            "allowEdit": false,
            "shareOption": "Private",
            "isAutogenerated": true,
          }
        ],
        "pagination": {
          "page": 1,
          "pageSize": 10,
          "numberOfPages": 1,
          "totalItemCount": 2
        }
      };

      // Act
      final collection = WishListCollectionModel.fromJson(json);

      // Assert
      expect(collection.wishListCollection?.length, 2);
      expect(collection.wishListCollection?[0].id, "wishlist1");
      expect(collection.wishListCollection?[1].name, "Another Wishlist");
      expect(collection.pagination?.page, 1);
      expect(collection.pagination?.totalItemCount, 2);
    });

    test(
        'toJson should correctly serialize WishListCollectionModel object to JSON',
        () {
      // Arrange
      final collection = WishListCollectionModel(
        wishListCollection: [
          WishList(
            id: "wishlist1",
            name: "My Wishlist",
            description: "A sample wishlist",
            canAddAllToCart: true,
            updatedOn: DateTime.parse("2024-11-14T12:00:00.000Z"),
            updatedByDisplayName: "User A",
            wishListLinesCount: 5,
            wishListSharesCount: 2,
            isSharedList: true,
            sharedByDisplayName: "Shared User",
            allowEditingBySharedWithUsers: true,
            shareOption: "Public",
            isAutogenerated: false,
            pagination: Pagination(
              page: 1,
              pageSize: 10,
              numberOfPages: 1,
              totalItemCount: 5,
            ),
            wishListLineCollection: [
              WishListLine(
                id: "line1",
                productName: "Product A",
                qtyOnHand: 10,
                canAddToCart: true,
                unitOfMeasure: "PCS",
                createdOn: DateTime.parse("2024-11-14T12:00:00.000Z"),
              ),
            ],
          ),
        ],
        pagination: Pagination(
          page: 1,
          pageSize: 10,
          numberOfPages: 1,
          totalItemCount: 2,
        ),
      );

      // Act
      final json = collection.toJson();

      // Assert
      expect(json["wishListCollection"]?.length, 1);
      expect(json["wishListCollection"]?[0]["id"], "wishlist1");
      expect(json["pagination"]?["page"], 1);
      expect(json["pagination"]?["totalItemCount"], 2);
    });

    test('fromJson should handle empty JSON gracefully', () {
      // Arrange
      Map<String, dynamic> json = {};

      // Act
      final collection = WishListCollectionModel.fromJson(json);

      // Assert
      expect(collection.wishListCollection, isNull);
      expect(collection.pagination, isNull);
    });

    test('toJson should handle empty WishListCollectionModel gracefully', () {
      // Arrange
      final collection = WishListCollectionModel();

      // Act
      final json = collection.toJson();

      // Assert
      expect(json["wishListCollection"], isNull);
      expect(json["pagination"], isNull);
    });
  });
}
