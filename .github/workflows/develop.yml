name: Dev Build
on:
  push:
    branches:
      - main
      - develop
      - dev
  pull_request:
    branches:
      - main
      - develop
      - dev
      - "epic/**"
      - "feature/**"
      - "story/**"
  workflow_dispatch:
    inputs:
      release:
        description: "Release for"
        required: true
        default: "qa"
        type: choice
        options:
          - qa
          - customers
          - test
      analytics_config:
        description: "Config to use"
        required: true
        default: "flutter"
        type: choice
        options:
          - flutter
          - qa_analytics
      release_tag1:
        description: "Tag1: add all tickets from Tag1-Tag2 or Tag1-Head with release notes (optional)"
        required: false
      release_tag2:
        description: "Tag2: add all tickets from Tag1-Tag2 or Tag2-Head with release notes (optional)"
        required: false

jobs:
  ios:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: List
        run: |
          ls -l

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version-file: pubspec.yaml
          cache: true

      - run: flutter --version

      - run: flutter doctor -v

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Determine config
        id: config
        run: |
          echo "Using analytics config: ${{ github.event.inputs.analytics_config || 'flutter' }}"
          echo "analytics_config=${{ github.event.inputs.analytics_config || 'flutter' }}" >> $GITHUB_ENV

      - name: Trigger iOS Debug Build
        run: |
          flutter clean
          flutter pub get
          cd ios
          pod deintegrate
          pod install
          cd ..
          flutter build ios --simulator
      - name: Upload iOS Debug Build as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-app
          path: build/ios/iphonesimulator/Runner.app
          if-no-files-found: warn

      - name: Cloning build scripts
        uses: actions/checkout@master
        with:
          repository: InsiteSoftware/commerce-mobile-build-scripts
          ref: refs/heads/${{ env.analytics_config }}
          token: ${{ secrets.my_pat }}
          path: build-scripts
      - name: Movie build-scripts to root folder
        run: |
          mv build-scripts/* ./
          ls -l
          ls -l fastlane
      - name: Extract branch name
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Fastlane
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event_name }}" = "push" ]; then
            echo "Running in PR. Using default value."
            RELEASE_GROUP='qa'
          else
            echo "Not running in PR."
            RELEASE_GROUP='${{ github.event.inputs.release }}'
          fi

          echo "Using RELEASE_GROUP: $RELEASE_GROUP"

          fastlane ios qa release:$RELEASE_GROUP
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
          RELEASE_TAG1: ${{ github.event.inputs.release_tag1 }}
          RELEASE_TAG2: ${{ github.event.inputs.release_tag2 }}
  trigger-automation:
    runs-on: macos-latest
    needs: ios
    steps:
      - name: Trigger iOS Automation Repo Workflow
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.my_pat }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/InsiteSoftware/mobile-automation-test/dispatches \
            -d '{
              "event_type": "run-automation-tests",
              "client_payload": {
                "artifact_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts",
                "pr_number": "${{ github.event.pull_request.number }}"
              }
            }'
  android:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: List
        run: |
          ls -l

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
          cache: "gradle"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version-file: pubspec.yaml
          cache: true

      - run: flutter --version

      - run: flutter doctor -v

      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Determine config
        id: config
        run: |
          echo "Using analytics config: ${{ github.event.inputs.analytics_config || 'flutter' }}"
          echo "analytics_config=${{ github.event.inputs.analytics_config || 'flutter' }}" >> $GITHUB_ENV

      - name: Trigger Android Debug Build
        run: |
          flutter clean
          flutter pub get
          flutter build apk --debug
      - name: Upload iOS Debug Build as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-app
          path: build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: warn

      - name: Cloning build scripts
        uses: actions/checkout@master
        with:
          repository: InsiteSoftware/commerce-mobile-build-scripts
          ref: refs/heads/${{ env.analytics_config }}
          token: ${{ secrets.my_pat }}
          path: build-scripts
      - name: Movie build-scripts to root folder
        run: |
          mv build-scripts/* ./
          ls -l
          ls -l fastlane
      - name: Extract branch name
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Fastlane
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event_name }}" = "push" ]; then
            echo "Running in PR. Using default value."
            RELEASE_GROUP='qa'
          else
            echo "Not running in PR."
            RELEASE_GROUP='${{ github.event.inputs.release }}'
          fi

          echo "Using RELEASE_GROUP: $RELEASE_GROUP"

          fastlane android qa release:$RELEASE_GROUP
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
          RELEASE_TAG1: ${{ github.event.inputs.release_tag1 }}
          RELEASE_TAG2: ${{ github.event.inputs.release_tag2 }}
